package com.allets.backend.data.server.entity.common;// default package
// Generated 2015. 8. 15 오후 5:46:57 by Hibernate Tools 3.2.2.GA


import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * MgComment generated by hbm2java
 */
@Entity
@Table(name = "MG_COMMENT"
        , catalog = "allets_common",
        schema = "")
public class MgComment implements Serializable {


    private Long commentId;
    private Long parentCommentId;
    private String status;
    private Long contentsId;
    private Long cardId;
    private Long uid;
    private String text;
    private byte hasChild;
    private Date cdate;
    private String uids;
    private Set<MgCommentLike> mgCommentLikes = new HashSet<MgCommentLike>(0);

    public MgComment() {
    }

    public MgComment(byte hasChild, Date cdate) {
        this.hasChild = hasChild;
        this.cdate = cdate;
    }


    public MgComment(Long parentCommentId, String status, Long contentsId, Long cardId, Long uid, String text, byte hasChild, Date cdate, String uids, Set<MgCommentLike> mgCommentLikes) {
        this.parentCommentId = parentCommentId;
        this.status = status;
        this.contentsId = contentsId;
        this.cardId = cardId;
        this.uid = uid;
        this.text = text;
        this.hasChild = hasChild;
        this.cdate = cdate;
        this.uids = uids;
        this.mgCommentLikes = mgCommentLikes;
    }

    public void setCommentId(long commentId) {
        this.commentId = commentId;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "comment_id", unique = true, nullable = false, insertable = true, updatable = true)
    public Long getCommentId() {
        return this.commentId;
    }

    public void setCommentId(Long commentId) {
        this.commentId = commentId;
    }

    @Basic
    @Column(name = "parent_comment_id", nullable = true, insertable = true, updatable = true)
    public Long getParentCommentId() {
        return this.parentCommentId;
    }

    public void setParentCommentId(Long parentCommentId) {
        this.parentCommentId = parentCommentId;
    }

    @Basic
    @Column(name = "status", length = 10, nullable = true, insertable = true, updatable = true)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Basic
    @Column(name = "contents_id", nullable = true, insertable = true, updatable = true)
    public Long getContentsId() {
        return this.contentsId;
    }

    public void setContentsId(Long contentsId) {
        this.contentsId = contentsId;
    }

    @Basic
    @Column(name = "card_id", nullable = true, insertable = true, updatable = true)
    public Long getCardId() {
        return this.cardId;
    }

    public void setCardId(Long cardId) {
        this.cardId = cardId;
    }

    @Basic
    @Column(name = "uid", nullable = true, insertable = true, updatable = true)
    public Long getUid() {
        return this.uid;
    }

    public void setUid(Long uid) {
        this.uid = uid;
    }

    @Basic
    @Column(name = "text", length = 4096, nullable = true, insertable = true, updatable = true)
    public String getText() {
        return this.text;
    }

    public void setText(String text) {
        this.text = text;
    }

    @Basic
    @Column(name = "has_child", nullable = false, insertable = true, updatable = true)
    public byte getHasChild() {
        return this.hasChild;
    }

    public void setHasChild(byte hasChild) {
        this.hasChild = hasChild;
    }

    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "cdate", nullable = false, length = 19, insertable = true, updatable = true)
    public Date getCdate() {
        return this.cdate;
    }

    public void setCdate(Date cdate) {
        this.cdate = cdate;
    }

    @Basic
    @Column(name = "uids", length = 2000, nullable = true, insertable = true, updatable = true)
    public String getUids() {
        return this.uids;
    }

    public void setUids(String uids) {
        this.uids = uids;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "mgComment")
    public Set<MgCommentLike> getMgCommentLikes() {
        return this.mgCommentLikes;
    }

    public void setMgCommentLikes(Set<MgCommentLike> mgCommentLikes) {
        this.mgCommentLikes = mgCommentLikes;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        MgComment mgComment = (MgComment) o;

        if (hasChild != mgComment.hasChild) return false;
        if (commentId != null ? !commentId.equals(mgComment.commentId) : mgComment.commentId != null) return false;
        if (parentCommentId != null ? !parentCommentId.equals(mgComment.parentCommentId) : mgComment.parentCommentId != null)
            return false;
        if (status != null ? !status.equals(mgComment.status) : mgComment.status != null) return false;
        if (contentsId != null ? !contentsId.equals(mgComment.contentsId) : mgComment.contentsId != null) return false;
        if (cardId != null ? !cardId.equals(mgComment.cardId) : mgComment.cardId != null) return false;
        if (uid != null ? !uid.equals(mgComment.uid) : mgComment.uid != null) return false;
        if (text != null ? !text.equals(mgComment.text) : mgComment.text != null) return false;
        if (cdate != null ? !cdate.equals(mgComment.cdate) : mgComment.cdate != null) return false;
        if (uids != null ? !uids.equals(mgComment.uids) : mgComment.uids != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = commentId != null ? commentId.hashCode() : 0;
        result = 31 * result + (parentCommentId != null ? parentCommentId.hashCode() : 0);
        result = 31 * result + (status != null ? status.hashCode() : 0);
        result = 31 * result + (contentsId != null ? contentsId.hashCode() : 0);
        result = 31 * result + (cardId != null ? cardId.hashCode() : 0);
        result = 31 * result + (uid != null ? uid.hashCode() : 0);
        result = 31 * result + (text != null ? text.hashCode() : 0);
        result = 31 * result + (int) hasChild;
        result = 31 * result + (cdate != null ? cdate.hashCode() : 0);
        result = 31 * result + (uids != null ? uids.hashCode() : 0);
        return result;
    }
}


